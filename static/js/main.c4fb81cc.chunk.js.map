{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/Dashboard.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","Dashboard","pushState","console","log","onClick","App","Container","style","minHeight","maxWidth","exact","path","Signup","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4fb81cc.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const signup = (email, password) => {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    const login = (email, password) => {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    const logout = () => {\r\n        return auth.signOut();\r\n    }\r\n\r\n    const resetPassword = (email) => {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    const updateEmail = (email) => {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    const updatePassword = (password) => {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail, \r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}  \r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function SignUp() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { signup } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit (e) {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) return setError('Passwords do not match');\r\n        \r\n        try { \r\n            setError('')\r\n            setLoading(true);\r\n            await signup(emailRef.current.value, passwordRef.current.value);\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to create an account')\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-2\">Sign Up</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label className=\"mb-0 mt-2\">Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label className=\"mb-0 mt-2\">Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label className=\"mb-0 mt-2\">Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n           </Card>\r\n           <div className=\"w-100 text-center mt-2\">Already have an account? <Link to=\"/login\">Log In</Link></div> \r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit (e) {\r\n        e.preventDefault();\r\n        \r\n        try { \r\n            setError('');\r\n            setLoading(true);\r\n            await login(emailRef.current.value, passwordRef.current.value);\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to log in')\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-2\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label className=\"mb-0 mt-2\">Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label className=\"mb-0 mt-2\">Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">Log In</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\"><Link to=\"/forgot-password\">Forgot your password?</Link></div> \r\n                </Card.Body>\r\n           </Card>\r\n           <div className=\"w-100 text-center mt-2\">Need an account? <Link to=\"/signup\">Sign up</Link></div> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            render={props => {\r\n                return currentUser ? <Component { ...props } /> : <Redirect to='/login' />\r\n            }}\r\n        >\r\n            \r\n        </Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef();\r\n    const { resetPassword } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function handleSubmit (e) {\r\n        e.preventDefault();\r\n        \r\n        try { \r\n            setMessage('');\r\n            setError('');\r\n            setLoading(true);\r\n            await resetPassword(emailRef.current.value);\r\n            setMessage('Check your inbox for further instructions')\r\n        } catch {\r\n            setError('Failed to reset password')\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-2\">Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label className=\"mb-0 mt-2\">Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">Reset Password</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\"><Link to=\"/login\">Return to login</Link></div> \r\n                </Card.Body>\r\n           </Card>\r\n           <div className=\"w-100 text-center mt-2\">Need an account? <Link to=\"/signup\">Sign up</Link></div> \r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { currentUser, updateEmail, updatePassword } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    function handleSubmit (e) {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) return setError('Passwords do not match');\r\n\r\n        const promises = [];\r\n        setLoading(true);\r\n        setError('');\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(() => {\r\n            setError('Failed to update account')\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-2\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label className=\"mb-0 mt-2\">Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} defaultValue={currentUser.email} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label className=\"mb-0 mt-2\">Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label className=\"mb-0 mt-2\">Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">Update</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n           </Card>\r\n           <div className=\"w-100 text-center mt-2\"><Link to=\"/\">Cancel</Link></div> \r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Card, Button, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('');\r\n    const { currentUser, logout } = useAuth();\r\n    const history = useHistory();\r\n\r\n    console.log(currentUser)\r\n\r\n    async function handleLogout() {\r\n        setError('');\r\n        try{\r\n            await logout();\r\n            history.pushState('/');\r\n        } catch {\r\n            setError(\"Failed to logout\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-2\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email: </strong> {currentUser.email}\r\n                    <Link to='update-profile' className='btn btn-primary w-100 mt-3'>Update Profile</Link>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>    \r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport Signup from './Signup';\nimport Login from './Login';\nimport PrivateRoute from './PrivateRoute';\nimport ForgotPassword from './ForgotPassword';\nimport UpdateProfile from './UpdateProfile';\nimport Dashboard from './Dashboard';\nimport { Container } from 'react-bootstrap';\nimport { AuthProvider } from '../contexts/AuthContext';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n      <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\n        <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n            <Router>\n              <AuthProvider>\n                <Switch>\n                  <PrivateRoute exact path='/' component={Dashboard} />\n                  <Route path='/signup' component={Signup} />\n                  <Route path='/login' component={Login} />\n                  <Route path='/forgot-password' component={ForgotPassword} />\n                  <PrivateRoute path='/update-profile' component={UpdateProfile} />\n                </Switch>\n              </AuthProvider>\n            </Router>\n        </div>\n      </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}